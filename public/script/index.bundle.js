/******/ (() => { // webpackBootstrap
var __webpack_exports__ = {};
/*!**********************!*\
  !*** ./src/index.ts ***!
  \**********************/
var params = new URLSearchParams(window.location.search);
var ro = new IntersectionObserver(function (el) {
    for (var _i = 0, el_1 = el; _i < el_1.length; _i++) {
        var e = el_1[_i];
        if (e.intersectionRatio > 0) {
            e.target.classList.add("visible");
        }
    }
});
document.querySelectorAll(".scroll-anim").forEach(function (el) {
    el.classList.add("fade-on-scroll");
    ro.observe(el);
});
function clean_fade_in() {
    document.body.classList.remove("fade-out");
    document.body.classList.add("fade-in");
    setTimeout(function () {
        document.body.classList.remove("fade-in");
    }, 250);
}
window.addEventListener("pageshow", function (e) {
    if (e.persisted) {
        console.log("page was persisted");
        clean_fade_in();
    }
});
if (params.has("fade-in")) {
    clean_fade_in();
}
function link_transition(e, el) {
    e.preventDefault();
    document.body.classList.add("fade-out");
    setTimeout(function () {
        window.location.assign(el.href);
    }, 250);
}

/******/ })()
;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,